name: CI - Configure, Build, Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  tags:
    - 'v*'    
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        runs-on: [self-ubuntu-24.04, karolina]

    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure the Build System
        run: |
            if [ "${{ matrix.runs-on }}" == "karolina" ]; then
                module load Boost/1.83.0-GCC-13.2.0 Ninja/1.12.1-GCCcore-13.3.0 OpenMPI/4.1.6-GCC-13.2.0
            fi
            cmake --preset default
            tree

      - name: Build the Project
        run: |
          if [ "${{ matrix.runs-on }}" == "karolina" ]; then
               module load Boost/1.83.0-GCC-13.2.0 Ninja/1.12.1-GCCcore-13.3.0 OpenMPI/4.1.6-GCC-13.2.0
          fi
          cmake --build --preset default
#          mpirun -np ${{ matrix.nps }} build/default/myapp/myapp

      - name: Run Tests
        run: |
          if [ "${{ matrix.runs-on }}" == "karolina" ]; then
               module load Boost/1.83.0-GCC-13.2.0 OpenMPI/4.1.6-GCC-13.2.0
          fi
          ctest --preset default

      - name: Package the Application
        run: |
          if [ "${{ matrix.runs-on }}" == "karolina" ]; then
               module load Boost/1.83.0-GCC-13.2.0 OpenMPI/4.1.6-GCC-13.2.0
          fi
          cmake --build --preset default -t package

      - name: Upload tarball
        uses: actions/upload-artifact@v4
        with:
          name: archive-${{ matrix.runs-on }}-np${{ matrix.nps }}
          path: |
            build/default/*.tar.gz
            LICENSE
            README.adoc

  build-docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      -
        name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}